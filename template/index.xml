<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Template-rsses on Remco Docs</title>
    <link>https://heavyhorst.github.io/remco/template/index.xml</link>
    <description>Recent content in Template-rsses on Remco Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Wed, 05 Oct 2016 17:33:14 +0200</lastBuildDate>
    <atom:link href="https://heavyhorst.github.io/remco/template/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Templates</title>
      <link>https://heavyhorst.github.io/remco/template/</link>
      <pubDate>Wed, 05 Oct 2016 17:33:14 +0200</pubDate>
      
      <guid>https://heavyhorst.github.io/remco/template/</guid>
      <description>

&lt;p&gt;Templates are written in flosch&amp;rsquo;s &lt;a href=&#34;https://github.com/flosch/pongo2&#34;&gt;&lt;code&gt;pongo2&lt;/code&gt;&lt;/a&gt; template engine.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For a documentation on how the templating language works you can &lt;a href=&#34;https://docs.djangoproject.com/en/dev/topics/templates/&#34;&gt;head over to the Django documentation&lt;/a&gt;. pongo2 aims to be compatible with it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;template-functions&#34;&gt;Template Functions&lt;/h2&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;exists&lt;/strong&gt; &amp;ndash; Checks if the key exists. Return false if key is not found.&lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% if exists(&amp;quot;/key&amp;quot;) %}
    value: {{ getv (&amp;quot;/key&amp;quot;) }}
{% endif %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;get&lt;/strong&gt; &amp;ndash; Returns the KVPair where key matches its argument.&lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% with get(&amp;quot;/key&amp;quot;) as dat %}
    key: {{dat.Key}}
    value: {{dat.Value}}
{% endwith %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;gets&lt;/strong&gt; &amp;ndash; Returns all KVPair, []KVPair, where key matches its argument.&lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for i in gets(&amp;quot;/*&amp;quot;) %}
    key: {{i.Key}}
    value: {{i.Value}}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;getv&lt;/strong&gt; &amp;ndash; Returns the value as a string where key matches its argument or an optional default value.&lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;value: {{ getv(&amp;quot;/key&amp;quot;) }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;with-a-default-value&#34;&gt;With a default value&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;value: {{ getv(&amp;quot;/key&amp;quot;, &amp;quot;default_value&amp;quot;) }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;getvs&lt;/strong&gt; &amp;ndash; Returns all values, []string, where key matches its argument.&lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for value in getvs(&amp;quot;/*&amp;quot;) %}
    value: {{value}}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;getenv&lt;/strong&gt; &amp;ndash; Retrieves the value of the environment variable named by the key. It returns the value, which will be empty if the variable is not present. Optionally, you can give a default value that will be returned if the key is not present. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export HOSTNAME=`hostname`
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;hostname: {{getenv(&amp;quot;HOSTNAME&amp;quot;)}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;with-a-default-value-1&#34;&gt;With a default value&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;ipaddr: {{ getenv(&amp;quot;HOST_IP&amp;quot;, &amp;quot;127.0.0.1&amp;quot;) }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;ls&lt;/strong&gt; &amp;ndash; Returns all subkeys, []string, where path matches its argument. Returns an empty list if path is not found. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for i in ls(&amp;quot;/deis/services&amp;quot;) %}
   value: {{i}}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;lsdir&lt;/strong&gt; &amp;ndash; Returns all subkeys, []string, where path matches its argument. It only returns subkeys that also have subkeys. Returns an empty list if path is not found. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for dir in lsdir(&amp;quot;/deis/services&amp;quot;) %}
   value: {{dir}}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;replace&lt;/strong&gt; &amp;ndash; Alias for the &lt;a href=&#34;https://golang.org/pkg/strings/#Replace&#34;&gt;strings.Replace&lt;/a&gt; function. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;backend = {{ replace(getv(&amp;quot;/services/backend/nginx&amp;quot;), &amp;quot;-&amp;quot;, &amp;quot;_&amp;quot;, -1) }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;contains&lt;/strong&gt; &amp;ndash; Alias for the &lt;a href=&#34;https://golang.org/pkg/strings/#Contains&#34;&gt;strings.Contains&lt;/a&gt; function. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% if contains(getv(&amp;quot;/services/backend/nginx&amp;quot;), &amp;quot;something&amp;quot;) %}
something
{% endif %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;printf&lt;/strong&gt; &amp;ndash; Alias for the &lt;a href=&#34;https://golang.org/pkg/fmt/#Sprintf&#34;&gt;fmt.Sprintf&lt;/a&gt; function. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ getv (printf (&amp;quot;/config/%s/host_port&amp;quot;, dir)) }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;lookupIP&lt;/strong&gt; &amp;ndash; Wrapper for the &lt;a href=&#34;https://golang.org/pkg/net/#LookupIP&#34;&gt;net.LookupIP&lt;/a&gt; function. The wrapper returns the IP addresses in alphabetical order. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for ip in lookupIP(&amp;quot;kube-master&amp;quot;) %}
 {{ ip }}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;lookupSRV&lt;/strong&gt; &amp;ndash; Wrapper for the &lt;a href=&#34;https://golang.org/pkg/net/#LookupSRV&#34;&gt;net.LookupSRV&lt;/a&gt; function. The wrapper returns the SRV records in alphabetical order. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for srv in lookupSRV(&amp;quot;xmpp-server&amp;quot;, &amp;quot;tcp&amp;quot;, &amp;quot;google.com&amp;quot;) %}
  target: {{ srv.Target }}
  port: {{ srv.Port }}
  priority: {{ srv.Priority }}
  weight: {{ srv.Weight }}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h2 id=&#34;template-filters&#34;&gt;Template Filters&lt;/h2&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;base64&lt;/strong&gt; &amp;ndash; Encodes a string as base64 &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;quot;somestring&amp;quot; | base64}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;base&lt;/strong&gt; &amp;ndash; Alias for the &lt;a href=&#34;https://golang.org/pkg/path/#Base&#34;&gt;path.Base&lt;/a&gt; function. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;quot;/home/user/test&amp;quot; | base }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;dir&lt;/strong&gt; &amp;ndash; Alias for the &lt;a href=&#34;https://golang.org/pkg/path/#Dir&#34;&gt;path.Dir&lt;/a&gt; function. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ &amp;quot;/home/user/test&amp;quot; | dir }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;split&lt;/strong&gt; &amp;ndash; Alias for the &lt;a href=&#34;https://golang.org/pkg/strings/#Split&#34;&gt;strings.Split&lt;/a&gt; function. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for i in (&amp;quot;/home/user/test&amp;quot; | split:&amp;quot;/&amp;quot;) %}
{{i}}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;parseYAML&lt;/strong&gt; &amp;ndash; Returns an interface{} of the yaml/json value.&lt;/summary&gt;
&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;toJSON&lt;/strong&gt; &amp;ndash; Converts data, for example the result of gets or lsdir, into an JSON object. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ gets(&amp;quot;/myapp/database/*&amp;quot;) | toJson}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;toPrettyJSON&lt;/strong&gt; &amp;ndash; Converts data, for example the result of gets or lsdir, into an pretty-printed JSON object, indented by four spaces. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ gets(&amp;quot;/myapp/database/*&amp;quot;) | toPrettyJson}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;toYAML&lt;/strong&gt; &amp;ndash; Converts data, for example the result of gets or lsdir, into a YAML string. &lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ gets(&amp;quot;/myapp/database/*&amp;quot;) | toJson}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;sortByLength&lt;/strong&gt; - Returns the sorted array. &lt;/summary&gt;&lt;/p&gt;

&lt;p&gt;Works with []string and []KVPair.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% for dir in lsdir(&amp;quot;/config&amp;quot;) | sortByLength %}
{{dir}}
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt; &lt;strong&gt;decrypt&lt;/strong&gt; &amp;ndash; Decrypts the stored data. Data must follow the following format, &lt;code&gt;base64(gpg(gzip(data)))&lt;/code&gt;. &lt;/summary&gt;&lt;/p&gt;

&lt;p&gt;This is compatible with &lt;a href=&#34;https://github.com/xordataexchange/crypt/tree/master/bin/crypt&#34;&gt;crypt&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Works with string, []string, KVPair, KVPairs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ getv(&amp;quot;/test/data&amp;quot;) | decrypt:&amp;quot;/path/to/your/armored/private/key&amp;quot; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;storing-data-using-gpg&#34;&gt;Storing data using gpg&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;data = `echo &#39;secret text&#39; | gzip -c | gpg2 --compress-level 0 --encrypt --default-recipient &amp;lt;your-recipient&amp;gt; | base64`
ETCDCTL_API=3 etcdctl put /test/data $data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>